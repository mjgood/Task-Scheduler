Author: Thomas Singleton

Description:
This is the initial PHP-HTTP API for the Task Scheduler Server application, available in plain text.

credentials.php
This file is used by the server to provide access to the database. The credentials are hosted
in one location, allowing any modifactions to require only one edit.

getTaskById.php
Gets a task, by ID, from the MySQL Database table specified.
Provide the ID via POST/GET, and the script returns stringified JSON objects.
Arguments:
id
  -> MUST BE PROVIDED
new_task
  -> If not provided (null) or 0: Delete from tasks
  -> If 1: Delete from new_tasks

deleteTaskById.php
Deletes a task, by ID, from the MySQL Database table specified.
Provide the ID via POST/GET; returns true if successful
or an Error message otherwise.
Arguments:
id
  -> MUST BE PROVIDED
new_task
  -> If not provided (null) or 0: Delete from tasks
  -> If 1: Delete from new_tasks

insertTask.php
Inserts a task into the tasks table in the MySQL database.
Provide arguments via POST/GET, and the script returns either "true" or the error message.
IMPORTANT:
id is the Android SQLite _id value. Do not insert into this table without first completing insertion
into the Android Task Scheduler SQLite database tasks table.
Arguments:
id
  -> MUST BE PROVIDED
subject
  -> MUST BE PROVIDED
completion_status
completion_percentage
repeat_id
start_time
end_time
deadline_time
estimated_time
priority
repeat_conditions
description

updateTask.php
Updates a task into the tasks table in the MySQL
database tasks table.
Provide arguments via POST/GET, and the script returns either "true" or the error message.
IMPORTANT:
id is the Android SQLite _id value.
Arguments:
id
  -> MUST BE PROVIDED
subject
completion_status
completion_percentage
repeat_id
start_time
end_time
deadline_time
estimated_time
priority
repeat_conditions
description
