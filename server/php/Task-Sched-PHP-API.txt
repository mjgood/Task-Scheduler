Author: Thomas Singleton

Description:
This is the initial PHP-HTTP API for the Task Scheduler Server application, available in plain text.

------------------
credentials.php
This file is used by the server to provide access to the database. The credentials are hosted
in one location, allowing any modifactions to require only one edit.

------------------
getTaskById.php
Gets a task, by ID, from the MySQL Database table specified.
Provide the ID via POST/GET, and the script returns stringified JSON objects.
Arguments:
id
  -> MUST BE PROVIDED
new_task
  -> If not provided (null) or 0: Delete from tasks
  -> If 1: Delete from new_tasks
Returns:
id
subject
completion_status
completion_percentage
repeat_id
start_time
end_time
deadline_time
estimated_time
priority
repeat_conditions
description

---------------------
deleteTaskById.php
Deletes a task, by ID, from the MySQL Database table specified.
Provide the ID via POST/GET; returns true if successful
or an Error message otherwise.
Arguments:
id
  -> MUST BE PROVIDED
new_task
  -> If not provided (null) or 0: Delete from tasks
  -> If 1: Delete from new_tasks
Returns:
true if successful
Anything else (error message) if unsuccessful

---------------
insertTask.php
Inserts a task into the tasks table in the MySQL database.
Provide arguments via POST/GET, and the script returns either "true" or the error message.
IMPORTANT:
id is the Android SQLite _id value. Do not insert into this table without first completing insertion
into the Android Task Scheduler SQLite database tasks table.
Arguments:
id
  -> MUST BE PROVIDED
subject
  -> MUST BE PROVIDED
completion_status
completion_percentage
repeat_id
start_time
end_time
deadline_time
estimated_time
priority
repeat_conditions
description
Returns:
true if successful
Anything else (error message) if unsuccessful

--------------
updateTask.php
Updates a task into the tasks table in the MySQL
database tasks table.
Provide arguments via POST/GET, and the script returns either "true" or the error message.
IMPORTANT:
id is the Android SQLite _id value.
Arguments:
id
  -> MUST BE PROVIDED
subject
completion_status
completion_percentage
repeat_id
start_time
end_time
deadline_time
estimated_time
priority
repeat_conditions
description
Returns:
true if successful
Anything else (error message) if unsuccessful

---------------------
getNewTaskIdList.php
Returns a JSON Array of the task_ids of all tasks in
the MySQL database new_tasks table, in ascending order.
Returns:
task_id

---------------------
getNewTaskList.php
Returns a JSON Array of all tuples in the MySQL
database new_tasks table, in ascending order.
Returns:
task_id
subject
completion_status
completion_percentage
repeat_id
start_time
end_time
deadline_time
estimated_time
priority
repeat_conditions
description

---------------------
getOldestTask.php
Returns a JSON Array containing the oldest task (by task_id)
in the MySQL new_tasks table.
Returns:
task_id
subject
completion_status
completion_percentage
repeat_id
start_time
end_time
deadline_time
estimated_time
priority
repeat_conditions
description

